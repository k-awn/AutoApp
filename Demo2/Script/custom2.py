 def hidemenu():
            if self.MenuBar.isVisible():
                self.MenuBar.hide()
            elif self.MenuBar.isHidden():
                self.MenuBar.show()
        self.MenuButton.clicked.connect(hidemenu)
        self.HomepageButton.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0))
        self.WorkflowsButton.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))
        self.ToolsButton.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(2))
        self.SettingsButton.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(3))
        def setButtonSize(iconsize, buttonwidth):
            self.SettingsButton.setIconSize(QSize(iconsize, iconsize))
            self.HomepageButton.setIconSize(QSize(iconsize, iconsize))
            self.WorkflowsButton.setIconSize(QSize(iconsize, iconsize))
            self.ToolsButton.setIconSize(QSize(iconsize, iconsize))
            self.SettingsButton.setMinimumWidth(buttonwidth)
            self.ToolsButton.setMinimumWidth(buttonwidth)
            self.HomepageButton.setMinimumWidth(buttonwidth)
            self.WorkflowsButton.setMinimumWidth(buttonwidth)
            self.SettingsButton.setFixedWidth(buttonwidth)
            self.WorkflowsButton.setFixedWidth(buttonwidth)
            self.HomepageButton.setFixedWidth(buttonwidth)
            self.ToolsButton.setFixedWidth(buttonwidth)    
            self.WorkflowsButton.setStyleSheet('text-align:right')
            self.SettingsButton.setStyleSheet('text-align:right')
            self.HomepageButton.setStyleSheet('text-align:right')

        def compactMode():
            savedsettings = open(r'Demo2\Script\Settings\compact-mode', 'r')
            compacttext = savedsettings.read()
            if compacttext == 'False':
                savedsettings.close()
                settingstext = open(r'Demo2\Script\Settings\compact-mode', 'w')
                settingstext.write('True')
                settingstext.close()
                self.MenuText.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p align=\"center\"><span style=\" font-size:8pt; font-weight:700;\">Menu</span></p></body></html>", None))
                self.SettingsButton.setText("")
                self.HomepageButton.setText("")
                self.WorkflowsButton.setText("")
                self.ToolsButton.setText("")
                setButtonSize(iconsize=25, buttonwidth=40)
                self.MenuBar.setFixedWidth(50)
                self.ToolsButton.setStyleSheet('text-align:left')
                self.WorkflowsButton.setStyleSheet('text-align:left')
                self.SettingsButton.setStyleSheet('text-align:left')
                self.HomepageButton.setStyleSheet('text-align:left')
                self.ToolsButton.setStyleSheet('QPushButton {text-align: center;}')
                self.HomepageButton.setStyleSheet('QPushButton {text-align: center;}')
                self.WorkflowsButton.setStyleSheet('QPushButton {text-align: center;}')
                self.SettingsButton.setStyleSheet('QPushButton {text-align: center;}')
            elif compacttext == 'True':
                savedsettings.close()
                settingstext = open(r'Demo2\Script\Settings\compact-mode', 'w')
                settingstext.write('False')
                settingstext.close()
                self.MenuText.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Menu</span></p></body></html>", None))
                setButtonSize(iconsize=20, buttonwidth=100)
                self.SettingsButton.setText("Settings")
                self.HomepageButton.setText("Homepage")
                self.WorkflowsButton.setText("Workflows")
                self.ToolsButton.setText("Tools")
                self.MenuBar.setFixedWidth(100)
                self.ToolsButton.setStyleSheet('QPushButton{text-align: left;}')
                self.WorkflowsButton.setStyleSheet('QPushButton{text-align: left;}')
                self.HomepageButton.setStyleSheet('QPushButton{text-align: left;}')
                self.SettingsButton.setStyleSheet('QPushButton{text-align: left;}')
        self.customToggle.stateChanged.connect(compactMode)    
        def on_button_click(self):
            print("MainWindow: Button clicked")
            run_stress_test()
        self.buttonHTML.clicked.connect(on_button_click)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.WorkflowsButton.setText(QCoreApplication.translate("MainWindow", u"Workflows", None))
        self.MenuText.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Menu</span></p></body></html>", None))
        self.SettingsButton.setText(QCoreApplication.translate("MainWindow", u"Settings", None))
        self.HomepageButton.setText(QCoreApplication.translate("MainWindow", u"Homepage", None))
        self.ToolsButton.setText(QCoreApplication.translate("MainWindow", u"Tools", None))
        self.label_6.setText(QCoreApplication.translate("MainWindow", u"Hotkey Trigger (stop with esc)", None))
        self.label.setText(QCoreApplication.translate("MainWindow", u"Button Trigger", None))
        self.HotkeyText.setHtml(QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:'Segoe UI'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p></body></html>", None))
        self.HotkeyText.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Your text here", None))
        self.label_7.setText(QCoreApplication.translate("MainWindow", u"Text", None))
        self.hotkeyClick.setText(QCoreApplication.translate("MainWindow", u"Typing in a specified location", None))
        self.label_9.setText(QCoreApplication.translate("MainWindow", u"Coordinates", None))
        self.xcoord.setPlaceholderText(QCoreApplication.translate("MainWindow", u"X-Coord", None))
        self.ycoord.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Y-Coord", None))
        self.label_5.setText(QCoreApplication.translate("MainWindow", u"no clue :3", None))
        self.label_8.setText(QCoreApplication.translate("MainWindow", u"Hotkey", None))
        self.textEdit_2.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Hotkey here", None))
        self.label_4.setText(QCoreApplication.translate("MainWindow", u"Hotkey Trigger (stop with esc)", None))
        self.chainReaction.setText(QCoreApplication.translate("MainWindow", u"Clicking in a specified location", None))
        self.imgRec.setText(QCoreApplication.translate("MainWindow", u"Clicking on a location based on image", None))
        self.buttonHTML.setText(QCoreApplication.translate("MainWindow", u"Clicking on HTML elements", None))
        self.label_10.setText(QCoreApplication.translate("MainWindow", u"Hotkey", None))
        self.textEdit.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Hotkey here", None))
        self.label_3.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:12pt; font-weight:700;\">Compact Mode</span></p></body></html>", None))
        self.label_2.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:700;\">Page Name</span></p></body></html>", None))
        self.MenuButton.setText("")
        def setButtonSize(iconsize, buttonwidth):
            self.SettingsButton.setIconSize(QSize(iconsize, iconsize))
            self.HomepageButton.setIconSize(QSize(iconsize, iconsize))
            self.WorkflowsButton.setIconSize(QSize(iconsize, iconsize))
            self.ToolsButton.setIconSize(QSize(iconsize, iconsize))
            self.SettingsButton.setMinimumWidth(buttonwidth)
            self.ToolsButton.setMinimumWidth(buttonwidth)
            self.HomepageButton.setMinimumWidth(buttonwidth)
            self.WorkflowsButton.setMinimumWidth(buttonwidth)
            self.SettingsButton.setFixedWidth(buttonwidth)
            self.WorkflowsButton.setFixedWidth(buttonwidth)
            self.HomepageButton.setFixedWidth(buttonwidth)
            self.ToolsButton.setFixedWidth(buttonwidth)    
            self.WorkflowsButton.setStyleSheet('text-align:right')
            self.SettingsButton.setStyleSheet('text-align:right')
            self.HomepageButton.setStyleSheet('text-align:right')
        def update_page_label():
            current_widget = self.stackedWidget.currentWidget()
            page_name = current_widget.objectName()
            print(page_name)
            self.label_2.setText(QCoreApplication.translate("MainWindow", f"<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:700;\">{page_name}</span></p></body></html>", None))
        self.stackedWidget.currentChanged.connect(update_page_label)
        update_page_label()
        savedsettings = open(r'Demo2\Script\Settings\compact-mode', 'r')
        compacttext = savedsettings.read()
        if compacttext == 'True':
            self.customToggle.setCheckState(Qt.CheckState.Checked)
            self.MenuText.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p align=\"center\"><span style=\" font-size:8pt; font-weight:700;\">Menu</span></p></body></html>", None))
            self.MenuBar.setFixedWidth(50)
            setButtonSize(25,40)
            self.SettingsButton.setText("")
            self.HomepageButton.setText("")
            self.WorkflowsButton.setText("")
            self.ToolsButton.setText("")
            self.ToolsButton.setStyleSheet('text-align:left')
            self.WorkflowsButton.setStyleSheet('text-align:left')
            self.SettingsButton.setStyleSheet('text-align:left')
            self.HomepageButton.setStyleSheet('text-align:left')
            self.ToolsButton.setStyleSheet('QPushButton {text-align: center;}')
            self.HomepageButton.setStyleSheet('QPushButton {text-align: center;}')
            self.WorkflowsButton.setStyleSheet('QPushButton {text-align: center;}')
            self.SettingsButton.setStyleSheet('QPushButton {text-align: center;}')
        else:
            self.customToggle.setCheckState(Qt.CheckState.Unchecked)
            self.MenuText.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Menu</span></p></body></html>", None))
            setButtonSize(iconsize=20, buttonwidth=100)
            self.SettingsButton.setText("Settings")
            self.HomepageButton.setText("Homepage")
            self.WorkflowsButton.setText("Workflows")
            self.ToolsButton.setText("Tools")
            self.MenuBar.setFixedWidth(100)
            self.ToolsButton.setStyleSheet('QPushButton{text-align: left;}')
            self.WorkflowsButton.setStyleSheet('QPushButton{text-align: left;}')
            self.HomepageButton.setStyleSheet('QPushButton{text-align: left;}')
            self.SettingsButton.setStyleSheet('QPushButton{text-align: left;}')